[general]
static=yes
writeprotect=yes
priorityjumping=no
autofallthrough=no

[globals]
ATTENDED_TRANSFER_COMPLETE_SOUND=beep

;[textmessages]
;exten => 100,1,Gosub(send-text,s,1,(1001))
;exten => 200,1,Gosub(send-text,s,1,(1002))
;exten => 300,1,Gosub(send-text,s,1,(1003))
;exten => e,1,Hangup()

;[subscriptions]
;exten => 100,hint,SIP/1001
;exten => 200,hint,SIP/1002
;exten => 300,hint,SIP/1003

[from-extensions]
; Extensions
exten => 1002,1,NoOp(You called 1002)
exten => 1002,2,Dial(PJSIP/1002,30)
exten => 1002,3,Hangup()

; Feature Codes:
exten => *65,1,Gosub(moh,s,1)

; Outras Extensões
exten => 100,1,NoOp(You called 1001)
exten => 100,2,Dial(PJSIP/1001,30)
exten => 100,3,Hangup()

exten => 200,1,NoOp(You called 200)
exten => 200,2,Dial(PJSIP/200,30)
exten => 200,3,Hangup()

exten => 300,1,NoOp(You called 300)
exten => 300,2,Dial(PJSIP/300,30)
exten => 300,3,Hangup()

; Anything else, Hangup
exten => _[+*0-9].,1,NoOp(You called: ${EXTEN})
exten => _[+*0-9].,n,Hangup(1)
exten => e,1,Hangup()


[moh]
exten => s,1,NoOp(Music On Hold)
exten => s,n,Ringing()
exten => s,n,Wait(2)
exten => s,n,Answer()
exten => s,n,Wait(1)
exten => s,n,MusicOnHold()

[dial-extension]
exten => s,1,NoOp(Calling: ${ARG1})
exten => s,n,Dial(SIP/${ARG1},30)
exten => s,n,Hangup()
exten => e,1,Hangup()

[send-text]
exten => s,1,NoOp(Sending Text To: ${ARG1})
exten => s,n,Set(PEER=${CUT(CUT(CUT(MESSAGE(from),@,1),<,2),:,2)})
exten => s,n,Set(FROM=${SHELL(asterisk -rx 'sip show peer ${PEER}' | grep 'Callerid' | cut -d':' -f2- | sed 's/^\ *//' | tr -d '\n')})
exten => s,n,Set(CALLERID_NUM=${CUT(CUT(FROM,>,1),<,2)})
exten => s,n,Set(FROM_SIP=${STRREPLACE(MESSAGE(from),<sip:${PEER}@,<sip:${CALLERID_NUM}@)})
exten => s,n,MessageSend(sip:${ARG1},${FROM_SIP})
exten => s,n,Hangup()


[attendant-normal]
exten => 100,1,Dial(PJSIP/401&PJSIP/402,30,t)
same => n, Hangup()

; exten => _X.,1,NoOp(Verificando headers na chamada recebida)
; same => n,NoOp(X-Router no atendente: ${PJSIP_HEADER(read,X-Router)})
; exten => attendant02, 1, Dial(PJSIP/attendant02,30,t)
; same => n,Hangup()

exten => attendant01,1,Dial(PJSIP/attendant01,30,t)
same => n,Hangup()

exten => 401,1, Dial(PJSIP/401)
same => Hangup()

[caller]
exten => 800,1,NoOp(Chamada para atendentes - contatos via ODBC DINÂMICO)
 ; Remove o fallback fixo - usa APENAS ODBC
 same => n,Set(IDS=${ODBC_ATT_ENDPOINTS()})
 same => n,NoOp(Endpoints na base ODBC: ${IDS})
 same => n,GotoIf($["${IDS}"=""]?noagents)

 ; monta CONTACTS sem duplicar
 same => n,Set(CONTACTS=)
 same => n,Set(I=1)
 same => n,Set(N=${FIELDQTY(IDS,|)})
 same => n,While($[${I} <= ${N}])
   same => n,Set(NUM=${CUT(IDS,|,${I})})
   same => n,Set(C=${PJSIP_DIAL_CONTACTS(${NUM})})   ; pode retornar A&B

   ; (opcional) só o primeiro contato de cada endpoint:
   same => n,Set(C=${CUT(C,&,1)})

   same => n,GotoIf($["${C}"=""]?next)
   same => n,Set(J=1)
   same => n,Set(M=${FIELDQTY(C,&)})
   same => n,While($[${J} <= ${M}])
     same => n,Set(URI=${CUT(C,&,${J})})

     ; ---- deduplicação sem regex ----
     same => n,Set(DUP=0)
     same => n,Set(K=1)
     same => n,Set(TOTAL=${IF($["${CONTACTS}"=""]?0:${FIELDQTY(CONTACTS,&)})})
     same => n,While($[${K} <= ${TOTAL}])
       same => n,Set(ELEM=${CUT(CONTACTS,&,${K})})
       same => n,GotoIf($["${ELEM}"="${URI}"]?found)
       same => n,Set(K=$[${K}+1])
       same => n,ContinueWhile()
     same => n,EndWhile
     same => n,Goto(notfound)

     same => n(found),Set(DUP=1)
     same => n(notfound),ExecIf($[${DUP}=0]?ExecIf($["${CONTACTS}"=""]?Set(CONTACTS=${URI}):Set(CONTACTS=${CONTACTS}&${URI})))

     same => n,Set(J=$[${J}+1])
   same => n,EndWhile
   same => n(next),NoOp(Contato(s) do ${NUM}: ${C})
   same => n,Set(I=$[${I}+1])
 same => n,EndWhile

 same => n,NoOp(CONTACTS => ${CONTACTS})
 same => n,GotoIf($["${CONTACTS}"=""]?noagents)
 same => n,Dial(${CONTACTS},25)
 same => n,Hangup()

 same => n(noagents),Playback(all-circuits-busy-now)
 same => n,Hangup()

[setheaders]
exten => s,1,NoOp(Setando headers no canal do atendente)
same => n,Set(PJSIP_HEADER(add,X-Router)=${X_ROUTER})
same => n,Return()
